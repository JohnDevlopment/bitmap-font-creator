{
    "1645323445" : "Developing a plugin for creating bitmap fonts in Godot.\n\nThe general concept is to divide a texture into cells. Much like SpriteFrames, you specify how many rows and columns there are, aptly named vframes and h frames respectively. From that the plugin would deduce the size of each cell in pixels.\n\nYou specify which cell you want to map to a character via an index, which is used to calculate the exact offset in the texture where said character is found.\n\nIn order for all this to work, the font needs to remember some of its attributes when serialized. To that end I will use the font's metatable to hold such attributes.\n\nThe meta attributes I need are:\n\nvframes: A dictionary that maps each texture ID to an integer specifying the number of rows in the texture\n\nhframes: A dictionary that maps each texture ID to an integer specifying the number of columns in the texture\n\nchar_mappings: A dictionary that maps a character to an index in the given texture.\n\n02/19/2022  9:11:50 PM\n\nCurrently working on the texture part of the dialog. Will see if it saves correctly.\n\nUpdate: It works! Both saving and loading of these values works.\n\n02/19/2022  9:25:04 PM\n\nNow working on the character mapping part of the dialog.\n\nUpdate: The character mappings are saved to the metatable as well. And now they are loaded into the dialog.",
    "1645367859" : "Still working on the character mappings in the bitmap font plugin. Right now I am adding each character to the font, and for that I need a few additional bits of information.\n\nSpecifically, I need the v and h frames. I'll use that to figure out the size of a cell.\n\n02/20/2022  9:58:50 AM\n\nCharacters are added to the font resource upon save.\n\nThe next order of business is to allow multiple textures per font. To do this, we will first make sure that the dialog properly saves the numeric ID of the texture for each character being mapped, to the metatable.\n\nFirst, we create a signal for the textures tab: texture_count_changed. It is emitted whenever the total amount of textures available has changed. The dialog root, we'll call it, connects with this signal and responds to it by setting the texture count in the character mapping tab. Said tab sets the texture count for each individual mapping.\n\nNext we want to transfer the texture ID chosen by the user, to the font. We do that the same way we get the index and character, via the node's properties. This is demonstrated well in CharacterMappings.gd.\n\n02/20/2022 11:03:08 AM\n\nA signal is emitted when a character mapping is added. The dialog responds by setting the texture count for that node. To make it work, the dialog also keeps a tally of the texture count, and updates that tally when the actual count changes.",
    "1645383820" : "I decided to make a new Github repository for my plugin since it got too big...And I wanted to make a separate project just to make it easier to test it.\n\n02/20/2022  3:58:32 PM\n\nI've finished the skeleton of the plugin, as it were. That is to say, I made the plugin work, though I do expect to see bugs down the line. I do not think this plugin is ready for production use--unless it's used by me, anyway."
}
